# Settings for image and model output
data_im_dirname: data # Name of folder that sliced data 2D images will be output to
seg_im_out_dirname: seg # Name of folder that sliced segmentation 2D images with be output to 
model_output_fn: trained_2d_model # Suffix for the saved model filename
clip_data: True # Clip and rescale the image data intensities before saving to disk
st_dev_factor: 2.575 # The number of standard deviations from the mean to clip data to
data_hdf5_path: /data # The internal HDF5 path to the image data
seg_hdf5_path: /data # The internal HDF5 path to the label data

# Settings for model training
training_axes: All # Specify axes/single axis to train on. Choose from [All, Z, X, Y]. 
image_size: 1024 # size of images used for training (must be multiple of 32)
downsample: False # If True, data will be downsampled by 2
training_set_proportion: 0.85 # Proportion of images to use the training, rest are used for validation
cuda_device: 0 # The graphics card to use (between 0 and 3 for a machine with 4 GPUs)
num_cyc_frozen: 8 # Number of training epochs on frozen model
num_cyc_unfrozen: 5 # Number of training epochs on unfrozen model
patience: 4 # Number of epochs to wait before early stopping if validation loss does not improve

loss_criterion: "DiceLoss" # Choose from one of [BCEDiceLoss, BCELoss, DiceLoss, GeneralizedDiceLoss, CrossEntropyLoss, TverskyLoss, BoundaryDoULoss, BoundaryLoss]
alpha: 0.5 # When BCEDiceLoss selected, weighting for BCELoss
beta: 0.5 # When BCEDiceLoss selected, weighting for DiceLoss
eval_metric: "DiceCoefficient" # Choose from one of [MeanIoU, DiceCoefficient]
pct_lr_inc: 0.3 # the percentage of overall iterations where the LR is increasing
# Parameters for finding learning rate
starting_lr: 1e-5 # Lower bound of learning rate search
end_lr: 1e-3 # Upper Bound of learning rate search
lr_find_epochs: 1 # Number of training epochs for learning rate search
lr_reduce_factor: 500 # Divisor for start and end LR when finding LR on reloaded model
plot_lr_graph: False # Set to True if gnuplot is installed and a terminal plot of learning rate is required 
use_sam: False
adaptive_sam: True
encoder_weights_path: False
#encoder_weights_path: "/somewhere/improved-resnet4.pt"
full_weights_path: False
# Parameters to control model architecture
model:
  # Choose type of segmentation model from the list of those tested so far
  # ["U_Net", "U_Net_Plus_plus", "FPN", "DeepLabV3", "DeepLabV3_Plus"]
  # "MA_Net", "Linknet", "PAN"]
  type: "U_Net"
  # For more details on encoder types please see smp.readthedocs.io
  # choose encoder, those tested so far include the following:
  # ["resnet34", "resnet50", "resnext50_32x4d", "efficientnet-b3","efficientnet-b4", "efficientnet-b5", "efficientnet-b7"
  # "timm-resnest50d"*, "timm-resnest101e"*,] *Encoders with asterisk not compatible with PAN.
  #encoder_name: "swin_base_patch4_window12_384"
  #encoder_name: "convnextv2_base"
  encoder_name: "resnet50"
   # use `imagenet` pre-trained weights for encoder initialization
  encoder_weights: "imagenet"
  
